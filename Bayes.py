{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from scipy import integrate"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/srv/conda/envs/notebook/lib/python3.7/site-packages/ipykernel_launcher.py:19: RuntimeWarning: divide by zero encountered in log\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x7f83690dc150>]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "cadena=\"scccscccs\"\n",
    "cadenas=[]\n",
    "cadenas[:0]=cadena\n",
    "for i in range(len(cadenas)):\n",
    "    if cadena[i]==\"c\":\n",
    "        cadenas[i]=1\n",
    "    else:\n",
    "        cadenas[i]=0\n",
    "\n",
    "numeroC=np.sum(cadenas)\n",
    "numeroS=len(cadenas)-numeroC\n",
    "\n",
    "\n",
    "H=np.linspace(0.,1.,100)\n",
    "verosimilitud=np.power(H,numeroC)*np.power(1-H,numeroS)\n",
    "\n",
    "evidencia=np.trapz(verosimilitud,H)\n",
    "posterior=verosimilitud/evidencia\n",
    "L=np.log(posterior)\n",
    "dL=(L[1:]-L[:-1])/(H[1:]-H[:-1])\n",
    "\n",
    "media=min(np.abs(dL))\n",
    "\n",
    "punto=np.argwhere(dL==media)\n",
    "a =int(punto[0][0])\n",
    "\n",
    "sigma=((dL[1:]-dL[:-1])/(H[2:]-H[:-2])*(-1.))**(-1./2.)\n",
    "Gauss=1/(2.*np.pi*sigma[a]**2)**(1/2)*np.exp((H-media)**2/(2*sigma[a]**2)*-1.)\n",
    "\n",
    "plt.figure()\n",
    "plt.plot(H,posterior)\n",
    "plt.plot(H,Gauss)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
